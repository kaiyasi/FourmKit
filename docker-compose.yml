version: '3.8'

services:
  # 主要的 Nginx 前端服務
  nginx:
    build:
      context: ./docker/nginx
    container_name: forumkit-nginx
    ports:
      - "12005:80"  # 主專案端口
    volumes:
      - ./uploads:/var/www/uploads:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - cdn
    restart: unless-stopped
    networks:
      - forumkit-net

  # CDN 服務
  cdn:
    build:
      context: ./docker/cdn
    container_name: forumkit-cdn
    ports:
      - "12002:80"  # CDN 端口
    volumes:
      - ./cdn-data:/usr/share/nginx/html:ro
    restart: unless-stopped
    networks:
      - forumkit-net
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80/admin/" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # CDN 上傳服務
  cdn-uploader:
    build:
      context: ./docker/cdn-uploader
    container_name: forumkit-cdn-uploader
    ports:
      - "${CDN_UPLOADER_PORT:-12001}:8080"  # CDN 上傳服務端口
    environment:
      - CDN_LOCAL_ROOT=/data
      - CDN_PUBLIC_BASE_URL=${PUBLIC_CDN_URL}
      - CDN_DEFAULT_SUBDIR=social_media
      - CDN_ADMIN_PASSWORD=${CDN_ADMIN_PASSWORD:-Serelix}
    volumes:
      - ./cdn-data:/data
    restart: unless-stopped
    networks:
      - forumkit-net

  # 後端 Flask 應用
  backend:
    build:
      context: ./backend
    container_name: forumkit-backend
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - SUPPORT_DATABASE_URL=${SUPPORT_DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL}
      - UPLOAD_ROOT=/app/uploads
      # Ensure preview images published to CDN land in a shared folder
      - CDN_LOCAL_ROOT=/app/cdn-data
      - PUBLIC_CDN_URL=${PUBLIC_CDN_URL}
      # Avoid noisy browser warning: Permissions-Policy: browsing-topics (not universally supported)
      - DISABLE_PERMISSIONS_POLICY=${DISABLE_PERMISSIONS_POLICY:-1}
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./logs:/app/logs
      # Share CDN content directory with backend so publish_to_cdn copies are visible to cdn container
      - ./cdn-data:/app/cdn-data
    depends_on:
      - postgres
      - redis
    expose:
      - "80"
    restart: unless-stopped
    networks:
      - forumkit-net

  # PostgreSQL 資料庫
  postgres:
    image: postgres:15
    container_name: forumkit-postgres
    ports:
      - "12007:5432"  # PostgreSQL 端口 (保持原來的內部端口)
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-forumkit}
      - POSTGRES_USER=${POSTGRES_USER:-forumkit}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-forumkit_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - forumkit-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-forumkit}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis 快取
  redis:
    image: redis:7-alpine
    container_name: forumkit-redis
    ports:
      - "12008:6379"  # Redis 端口 (保持原來的內部端口)
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - forumkit-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Celery Worker
  celery:
    build:
      context: ./backend
    container_name: forumkit-celery
    command: celery -A services.celery_app.celery_app worker --loglevel=info -Q instagram,maintenance,celery
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # Use same broker/backend as backend
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - forumkit-net

  # Celery Beat (定時任務)
  celery-beat:
    build:
      context: ./backend
    container_name: forumkit-celery-beat
    command: celery -A services.celery_app.celery_app beat --loglevel=info
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - forumkit-net

volumes:
  postgres_data:
  redis_data:

networks:
  forumkit-net:
    driver: bridge
