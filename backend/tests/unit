import os, json
from app import create_app
from utils.db import db_session
from models import User, UserRole, School
from utils.security import hash_password

def auth_header(token): return {"Authorization": f"Bearer {token}"}

def setup_module(_m):
    os.environ["JWT_SECRET_KEY"] = "test"
    app = create_app()
    app.testing = True
    global client
    client = app.test_client()
    # seed school + users
    sch = School(slug="ncku", name="NCKU")
    db_session.add(sch); db_session.commit()
    u1 = User(username="c_admin", email="c@x", password_hash=hash_password("pw"),
              role=UserRole.campus_admin, school_id=sch.id)
    u2 = User(username="x_admin", email="x@x", password_hash=hash_password("pw"),
              role=UserRole.cross_admin, school_id=None)
    db_session.add_all([u1,u2]); db_session.commit()

def login(name, pw="pw"):
    r = client.post("/api/auth/login", json={"username": name, "password": pw})
    assert r.status_code == 200
    return r.get_json()["access_token"]

def test_campus_ping_ok():
    t = login("c_admin")
    r = client.get("/api/admin/campus/ping", headers=auth_header(t))
    assert r.status_code == 200
    assert r.get_json()["scope"] == "campus"

def test_cross_ping_ok():
    t = login("x_admin")
    r = client.get("/api/admin/cross/ping", headers=auth_header(t))
    assert r.status_code == 200
    assert r.get_json()["scope"] == "cross"

def test_campus_denied_for_cross_admin():
    t = login("x_admin")
    r = client.get("/api/admin/campus/ping", headers=auth_header(t))
    assert r.status_code == 403
