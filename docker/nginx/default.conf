server {
  listen 80;
  server_name _;
  root /usr/share/nginx/html;
  index index.html;

  # 設定最大請求體大小（支援大檔案上傳和媒體預覽）
  client_max_body_size 100M;

  # 自訂錯誤頁（僅用於非 API 路徑）；API 維持後端 JSON
  error_page 403 /errors/403.html;
  error_page 404 /errors/404.html;
  error_page 500 502 503 504 /errors/500.html;

  location / {
    try_files $uri /index.html;
  }

  location /api/ {
    proxy_pass http://backend:80;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_read_timeout 300s;
    proxy_intercept_errors off; # 保留後端 JSON 錯誤格式
  }

  # 靜態上傳（反代到 cdn，僅轉送 /uploads/public/* → /<file>）
  # 一般上傳檔案（直接從本地 volume 服務）
  location /uploads/ {
    alias /var/www/uploads/;
    add_header Cache-Control "public, max-age=3600";
    
    # 確保正確的 MIME 類型
    location ~* \.(jpg|jpeg|png|gif|webp|svg)$ {
      add_header Cache-Control "public, max-age=86400";
    }
  }

  # 靜態上傳（先嘗試本機 volume，找不到再回退到 CDN）
  # 目的：避免尚未發佈到 CDN 的檔案（例如手動放到 uploads/public/*）被 404 吃掉
  location /uploads/public/ {
    # 以 root 方式對應：/uploads/public/* -> /var/www/uploads/public/*
    root /var/www;
    add_header Cache-Control "public, max-age=31536000, immutable";

    # 先用本機檔案（volume 掛載的 uploads/）
    # 若不存在，才轉送到 CDN（/uploads/public/x.jpg -> cdn 收到 /x.jpg）
    try_files $uri @cdn_public;
  }

  # 回退到 CDN 的內部位置
  location @cdn_public {
    # 將 /uploads/public/<path> 改寫為 /<path> 後再轉送到 CDN
    rewrite ^/uploads/public/(.*)$ /$1 break;
    proxy_pass http://cdn:80;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Socket.IO / WebSocket 反向代理（避免 404 與握手失敗）
  location /socket.io/ {
    proxy_pass http://backend:80;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_connect_timeout 60s;
    proxy_buffering off;
    proxy_cache_bypass $http_upgrade;
  }

  add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' http: https: ws: wss:; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; style-src-elem 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; frame-ancestors 'none';" always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options DENY always;
  add_header Referrer-Policy no-referrer-when-downgrade always;
}
